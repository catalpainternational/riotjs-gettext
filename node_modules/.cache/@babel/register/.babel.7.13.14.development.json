{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/josh/github/catalpainternational/riotjs-gettext/src/js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/josh/github/catalpainternational/riotjs-gettext\",\"filename\":\"/home/josh/github/catalpainternational/riotjs-gettext/src/js/test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/josh/github/catalpainternational/riotjs-gettext\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.13.14": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/josh/github/catalpainternational/riotjs-gettext",
      "filename": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/josh/github/catalpainternational/riotjs-gettext",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/test.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/",
        "sourceFileName": "test.js"
      }
    },
    "ast": null,
    "code": "import Catalog from './catalog.js';\n\nvar assert = require('assert');\n\nconst tet = new Catalog({\n  'Activity': 'Actividade',\n  'Project': 'Projetu',\n  'verb\\x04may': 'bele',\n  'month\\x04may': 'maiu',\n  'animal\\x04Elephant': 'Amimal abu-abu neebe boot',\n  'There is one activity': ['Iha atividade ida', 'Iha atividade barak'],\n  'foo\\x04There is one activity': ['Iha foo ida', 'Iha foo barak'],\n  'bar\\x04There is one activity': ['Iha bar ida', 'Iha bar barak'],\n  'There is %(total)s object. Remaining: %(count)s': ['Iha %(total)s objetu. Restu mak: %(count)s', 'Iha %(total)s objetu sira. Restu mak: %(count)s'],\n  'I caught %s pocket monster!. Remaining: %s': [\"Hau kaer %s pokemon deit!. Sei livre: %s\", \"Hau kaer %s pokemon! Sei livre: %s\"]\n});\ndescribe(\"Tetun translations\", function () {\n  it('should translate Activity to Actividade', () => {\n    assert.equal(tet.translate('', 'Activity'), 'Actividade');\n  }), it('should translate contextual markers when present', () => {\n    assert.equal(tet.translate('verb', 'may'), 'bele');\n    assert.equal(tet.translate('month', 'may'), 'maiu');\n  });\n  it('should translate interpolated positional markers when present', () => {\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', 'There are %(total)s objects. Remaining: %(count)s', 1, '', {\n      'total': 1,\n      'count': 10\n    }), 'Iha 1 objetu. Restu mak: 10');\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', 'There are %(total)s objects. Remaining: %(count)s', 5, '', {\n      'total': 5,\n      'count': 10\n    }), 'Iha 5 objetu sira. Restu mak: 10');\n  });\n  it('Should not require a plural for translation', () => {\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', '', 5, '', {\n      'total': 5,\n      'count': 10\n    }), 'Iha 5 objetu sira. Restu mak: 10');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiQ2F0YWxvZyIsImFzc2VydCIsInJlcXVpcmUiLCJ0ZXQiLCJkZXNjcmliZSIsIml0IiwiZXF1YWwiLCJ0cmFuc2xhdGUiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE9BQVAsTUFBb0IsY0FBcEI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxNQUFNQyxHQUFHLEdBQUcsSUFBSUgsT0FBSixDQUFZO0FBQ3RCLGNBQVksWUFEVTtBQUV0QixhQUFXLFNBRlc7QUFHdEIsaUJBQWUsTUFITztBQUl0QixrQkFBZ0IsTUFKTTtBQUt0Qix3QkFBc0IsMkJBTEE7QUFNdEIsMkJBQXlCLENBQUMsbUJBQUQsRUFBc0IscUJBQXRCLENBTkg7QUFPdEIsa0NBQWdDLENBQUMsYUFBRCxFQUFnQixlQUFoQixDQVBWO0FBUXRCLGtDQUFnQyxDQUFDLGFBQUQsRUFBZ0IsZUFBaEIsQ0FSVjtBQVN0QixxREFBbUQsQ0FBQyw0Q0FBRCxFQUErQyxpREFBL0MsQ0FUN0I7QUFVdEIsZ0RBQThDLENBQUMsMENBQUQsRUFBNkMsb0NBQTdDO0FBVnhCLENBQVosQ0FBWjtBQWFBSSxRQUFRLENBQUMsb0JBQUQsRUFBdUIsWUFBVTtBQUN2Q0MsRUFBQUEsRUFBRSxDQUFDLHlDQUFELEVBQTRDLE1BQU07QUFDbERKLElBQUFBLE1BQU0sQ0FBQ0ssS0FBUCxDQUFjSCxHQUFHLENBQUNJLFNBQUosQ0FBYyxFQUFkLEVBQWtCLFVBQWxCLENBQWQsRUFBNkMsWUFBN0M7QUFDRCxHQUZDLENBQUYsRUFJQUYsRUFBRSxDQUFDLGtEQUFELEVBQXFELE1BQU07QUFDM0RKLElBQUFBLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhSCxHQUFHLENBQUNJLFNBQUosQ0FBYyxNQUFkLEVBQXNCLEtBQXRCLENBQWIsRUFBMkMsTUFBM0M7QUFDQU4sSUFBQUEsTUFBTSxDQUFDSyxLQUFQLENBQWNILEdBQUcsQ0FBQ0ksU0FBSixDQUFjLE9BQWQsRUFBdUIsS0FBdkIsQ0FBZCxFQUE2QyxNQUE3QztBQUNELEdBSEMsQ0FKRjtBQVNBRixFQUFBQSxFQUFFLENBQUMsK0RBQUQsRUFBa0UsTUFBTTtBQUV4RUosSUFBQUEsTUFBTSxDQUFDSyxLQUFQLENBQWFILEdBQUcsQ0FBQ0ksU0FBSixDQUFjLEVBQWQsRUFBa0IsaURBQWxCLEVBQXFFLG1EQUFyRSxFQUEwSCxDQUExSCxFQUE2SCxFQUE3SCxFQUFpSTtBQUFDLGVBQVMsQ0FBVjtBQUFhLGVBQVM7QUFBdEIsS0FBakksQ0FBYixFQUEwSyw2QkFBMUs7QUFDQU4sSUFBQUEsTUFBTSxDQUFDSyxLQUFQLENBQWFILEdBQUcsQ0FBQ0ksU0FBSixDQUFjLEVBQWQsRUFBa0IsaURBQWxCLEVBQXFFLG1EQUFyRSxFQUEwSCxDQUExSCxFQUE2SCxFQUE3SCxFQUFpSTtBQUFDLGVBQVMsQ0FBVjtBQUFhLGVBQVM7QUFBdEIsS0FBakksQ0FBYixFQUEwSyxrQ0FBMUs7QUFDRCxHQUpDLENBQUY7QUFLQUYsRUFBQUEsRUFBRSxDQUFDLDZDQUFELEVBQWdELE1BQU07QUFDdERKLElBQUFBLE1BQU0sQ0FBQ0ssS0FBUCxDQUFhSCxHQUFHLENBQUNJLFNBQUosQ0FBYyxFQUFkLEVBQWtCLGlEQUFsQixFQUFxRSxFQUFyRSxFQUF5RSxDQUF6RSxFQUE0RSxFQUE1RSxFQUFnRjtBQUFDLGVBQVMsQ0FBVjtBQUFhLGVBQVM7QUFBdEIsS0FBaEYsQ0FBYixFQUF5SCxrQ0FBekg7QUFDRCxHQUZDLENBQUY7QUFJRCxDQW5CTyxDQUFSIiwic291cmNlUm9vdCI6Ii9ob21lL2pvc2gvZ2l0aHViL2NhdGFscGFpbnRlcm5hdGlvbmFsL3Jpb3Rqcy1nZXR0ZXh0L3NyYy9qcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2F0YWxvZyBmcm9tICcuL2NhdGFsb2cuanMnO1xudmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuXG5jb25zdCB0ZXQgPSBuZXcgQ2F0YWxvZyh7XG4gICdBY3Rpdml0eSc6ICdBY3RpdmlkYWRlJyxcbiAgJ1Byb2plY3QnOiAnUHJvamV0dScsXG4gICd2ZXJiXFx4MDRtYXknOiAnYmVsZScsXG4gICdtb250aFxceDA0bWF5JzogJ21haXUnLFxuICAnYW5pbWFsXFx4MDRFbGVwaGFudCc6ICdBbWltYWwgYWJ1LWFidSBuZWViZSBib290JyxcbiAgJ1RoZXJlIGlzIG9uZSBhY3Rpdml0eSc6IFsnSWhhIGF0aXZpZGFkZSBpZGEnLCAnSWhhIGF0aXZpZGFkZSBiYXJhayddLFxuICAnZm9vXFx4MDRUaGVyZSBpcyBvbmUgYWN0aXZpdHknOiBbJ0loYSBmb28gaWRhJywgJ0loYSBmb28gYmFyYWsnXSxcbiAgJ2JhclxceDA0VGhlcmUgaXMgb25lIGFjdGl2aXR5JzogWydJaGEgYmFyIGlkYScsICdJaGEgYmFyIGJhcmFrJ10sXG4gICdUaGVyZSBpcyAlKHRvdGFsKXMgb2JqZWN0LiBSZW1haW5pbmc6ICUoY291bnQpcyc6IFsnSWhhICUodG90YWwpcyBvYmpldHUuIFJlc3R1IG1hazogJShjb3VudClzJywgJ0loYSAlKHRvdGFsKXMgb2JqZXR1IHNpcmEuIFJlc3R1IG1hazogJShjb3VudClzJ10sXG4gICdJIGNhdWdodCAlcyBwb2NrZXQgbW9uc3RlciEuIFJlbWFpbmluZzogJXMnOiBbXCJIYXUga2FlciAlcyBwb2tlbW9uIGRlaXQhLiBTZWkgbGl2cmU6ICVzXCIsIFwiSGF1IGthZXIgJXMgcG9rZW1vbiEgU2VpIGxpdnJlOiAlc1wiXVxufSlcblxuZGVzY3JpYmUoXCJUZXR1biB0cmFuc2xhdGlvbnNcIiwgZnVuY3Rpb24oKXtcbiAgaXQoJ3Nob3VsZCB0cmFuc2xhdGUgQWN0aXZpdHkgdG8gQWN0aXZpZGFkZScsICgpID0+IHtcbiAgICBhc3NlcnQuZXF1YWwoIHRldC50cmFuc2xhdGUoJycsICdBY3Rpdml0eScpLCAnQWN0aXZpZGFkZScpO1xuICB9KSxcblxuICBpdCgnc2hvdWxkIHRyYW5zbGF0ZSBjb250ZXh0dWFsIG1hcmtlcnMgd2hlbiBwcmVzZW50JywgKCkgPT4ge1xuICAgIGFzc2VydC5lcXVhbCh0ZXQudHJhbnNsYXRlKCd2ZXJiJywgJ21heScpLCAnYmVsZScpO1xuICAgIGFzc2VydC5lcXVhbCggdGV0LnRyYW5zbGF0ZSgnbW9udGgnLCAnbWF5JyksICdtYWl1Jyk7XG4gIH0pXG5cbiAgaXQoJ3Nob3VsZCB0cmFuc2xhdGUgaW50ZXJwb2xhdGVkIHBvc2l0aW9uYWwgbWFya2VycyB3aGVuIHByZXNlbnQnLCAoKSA9PiB7XG5cbiAgICBhc3NlcnQuZXF1YWwodGV0LnRyYW5zbGF0ZSgnJywgJ1RoZXJlIGlzICUodG90YWwpcyBvYmplY3QuIFJlbWFpbmluZzogJShjb3VudClzJywgJ1RoZXJlIGFyZSAlKHRvdGFsKXMgb2JqZWN0cy4gUmVtYWluaW5nOiAlKGNvdW50KXMnLCAxLCAnJywgeyd0b3RhbCc6IDEsICdjb3VudCc6IDEwfSksICdJaGEgMSBvYmpldHUuIFJlc3R1IG1hazogMTAnKTtcbiAgICBhc3NlcnQuZXF1YWwodGV0LnRyYW5zbGF0ZSgnJywgJ1RoZXJlIGlzICUodG90YWwpcyBvYmplY3QuIFJlbWFpbmluZzogJShjb3VudClzJywgJ1RoZXJlIGFyZSAlKHRvdGFsKXMgb2JqZWN0cy4gUmVtYWluaW5nOiAlKGNvdW50KXMnLCA1LCAnJywgeyd0b3RhbCc6IDUsICdjb3VudCc6IDEwfSksICdJaGEgNSBvYmpldHUgc2lyYS4gUmVzdHUgbWFrOiAxMCcpO1xuICB9KVxuICBpdCgnU2hvdWxkIG5vdCByZXF1aXJlIGEgcGx1cmFsIGZvciB0cmFuc2xhdGlvbicsICgpID0+IHtcbiAgICBhc3NlcnQuZXF1YWwodGV0LnRyYW5zbGF0ZSgnJywgJ1RoZXJlIGlzICUodG90YWwpcyBvYmplY3QuIFJlbWFpbmluZzogJShjb3VudClzJywgJycsIDUsICcnLCB7J3RvdGFsJzogNSwgJ2NvdW50JzogMTB9KSwgJ0loYSA1IG9iamV0dSBzaXJhLiBSZXN0dSBtYWs6IDEwJyk7XG4gIH0pXG5cbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "Catalog",
        "assert",
        "require",
        "tet",
        "describe",
        "it",
        "equal",
        "translate"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,cAApB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,MAAMC,GAAG,GAAG,IAAIH,OAAJ,CAAY;AACtB,cAAY,YADU;AAEtB,aAAW,SAFW;AAGtB,iBAAe,MAHO;AAItB,kBAAgB,MAJM;AAKtB,wBAAsB,2BALA;AAMtB,2BAAyB,CAAC,mBAAD,EAAsB,qBAAtB,CANH;AAOtB,kCAAgC,CAAC,aAAD,EAAgB,eAAhB,CAPV;AAQtB,kCAAgC,CAAC,aAAD,EAAgB,eAAhB,CARV;AAStB,qDAAmD,CAAC,4CAAD,EAA+C,iDAA/C,CAT7B;AAUtB,gDAA8C,CAAC,0CAAD,EAA6C,oCAA7C;AAVxB,CAAZ,CAAZ;AAaAI,QAAQ,CAAC,oBAAD,EAAuB,YAAU;AACvCC,EAAAA,EAAE,CAAC,yCAAD,EAA4C,MAAM;AAClDJ,IAAAA,MAAM,CAACK,KAAP,CAAcH,GAAG,CAACI,SAAJ,CAAc,EAAd,EAAkB,UAAlB,CAAd,EAA6C,YAA7C;AACD,GAFC,CAAF,EAIAF,EAAE,CAAC,kDAAD,EAAqD,MAAM;AAC3DJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,GAAG,CAACI,SAAJ,CAAc,MAAd,EAAsB,KAAtB,CAAb,EAA2C,MAA3C;AACAN,IAAAA,MAAM,CAACK,KAAP,CAAcH,GAAG,CAACI,SAAJ,CAAc,OAAd,EAAuB,KAAvB,CAAd,EAA6C,MAA7C;AACD,GAHC,CAJF;AASAF,EAAAA,EAAE,CAAC,+DAAD,EAAkE,MAAM;AAExEJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,GAAG,CAACI,SAAJ,CAAc,EAAd,EAAkB,iDAAlB,EAAqE,mDAArE,EAA0H,CAA1H,EAA6H,EAA7H,EAAiI;AAAC,eAAS,CAAV;AAAa,eAAS;AAAtB,KAAjI,CAAb,EAA0K,6BAA1K;AACAN,IAAAA,MAAM,CAACK,KAAP,CAAaH,GAAG,CAACI,SAAJ,CAAc,EAAd,EAAkB,iDAAlB,EAAqE,mDAArE,EAA0H,CAA1H,EAA6H,EAA7H,EAAiI;AAAC,eAAS,CAAV;AAAa,eAAS;AAAtB,KAAjI,CAAb,EAA0K,kCAA1K;AACD,GAJC,CAAF;AAKAF,EAAAA,EAAE,CAAC,6CAAD,EAAgD,MAAM;AACtDJ,IAAAA,MAAM,CAACK,KAAP,CAAaH,GAAG,CAACI,SAAJ,CAAc,EAAd,EAAkB,iDAAlB,EAAqE,EAArE,EAAyE,CAAzE,EAA4E,EAA5E,EAAgF;AAAC,eAAS,CAAV;AAAa,eAAS;AAAtB,KAAhF,CAAb,EAAyH,kCAAzH;AACD,GAFC,CAAF;AAID,CAnBO,CAAR",
      "sourceRoot": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/",
      "sourcesContent": [
        "import Catalog from './catalog.js';\nvar assert = require('assert');\n\nconst tet = new Catalog({\n  'Activity': 'Actividade',\n  'Project': 'Projetu',\n  'verb\\x04may': 'bele',\n  'month\\x04may': 'maiu',\n  'animal\\x04Elephant': 'Amimal abu-abu neebe boot',\n  'There is one activity': ['Iha atividade ida', 'Iha atividade barak'],\n  'foo\\x04There is one activity': ['Iha foo ida', 'Iha foo barak'],\n  'bar\\x04There is one activity': ['Iha bar ida', 'Iha bar barak'],\n  'There is %(total)s object. Remaining: %(count)s': ['Iha %(total)s objetu. Restu mak: %(count)s', 'Iha %(total)s objetu sira. Restu mak: %(count)s'],\n  'I caught %s pocket monster!. Remaining: %s': [\"Hau kaer %s pokemon deit!. Sei livre: %s\", \"Hau kaer %s pokemon! Sei livre: %s\"]\n})\n\ndescribe(\"Tetun translations\", function(){\n  it('should translate Activity to Actividade', () => {\n    assert.equal( tet.translate('', 'Activity'), 'Actividade');\n  }),\n\n  it('should translate contextual markers when present', () => {\n    assert.equal(tet.translate('verb', 'may'), 'bele');\n    assert.equal( tet.translate('month', 'may'), 'maiu');\n  })\n\n  it('should translate interpolated positional markers when present', () => {\n\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', 'There are %(total)s objects. Remaining: %(count)s', 1, '', {'total': 1, 'count': 10}), 'Iha 1 objetu. Restu mak: 10');\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', 'There are %(total)s objects. Remaining: %(count)s', 5, '', {'total': 5, 'count': 10}), 'Iha 5 objetu sira. Restu mak: 10');\n  })\n  it('Should not require a plural for translation', () => {\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', '', 5, '', {'total': 5, 'count': 10}), 'Iha 5 objetu sira. Restu mak: 10');\n  })\n\n})\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1617713885921
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/josh/github/catalpainternational/riotjs-gettext/src/js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/josh/github/catalpainternational/riotjs-gettext\",\"filename\":\"/home/josh/github/catalpainternational/riotjs-gettext/src/js/test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/josh/github/catalpainternational/riotjs-gettext\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.14": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/josh/github/catalpainternational/riotjs-gettext",
      "filename": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/test.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/josh/github/catalpainternational/riotjs-gettext",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/test.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/test.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/",
        "sourceFileName": "test.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _catalog = _interopRequireDefault(require(\"./catalog.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar assert = require('assert');\n\nvar tet = new _catalog[\"default\"]({\n  'Activity': 'Actividade',\n  'Project': 'Projetu',\n  'verb\\x04may': 'bele',\n  'month\\x04may': 'maiu',\n  'animal\\x04Elephant': 'Amimal abu-abu neebe boot',\n  'There is one activity': ['Iha atividade ida', 'Iha atividade barak'],\n  'foo\\x04There is one activity': ['Iha foo ida', 'Iha foo barak'],\n  'bar\\x04There is one activity': ['Iha bar ida', 'Iha bar barak'],\n  'There is %(total)s object. Remaining: %(count)s': ['Iha %(total)s objetu. Restu mak: %(count)s', 'Iha %(total)s objetu sira. Restu mak: %(count)s'],\n  'I caught %s pocket monster!. Remaining: %s': [\"Hau kaer %s pokemon deit!. Sei livre: %s\", \"Hau kaer %s pokemon! Sei livre: %s\"]\n});\ndescribe(\"Tetun translations\", function () {\n  it('should translate Activity to Actividade', function () {\n    assert.equal(tet.translate('', 'Activity'), 'Actividade');\n  }), it('should translate contextual markers when present', function () {\n    assert.equal(tet.translate('verb', 'may'), 'bele');\n    assert.equal(tet.translate('month', 'may'), 'maiu');\n  });\n  it('should translate interpolated positional markers when present', function () {\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', 'There are %(total)s objects. Remaining: %(count)s', 1, '', {\n      'total': 1,\n      'count': 10\n    }), 'Iha 1 objetu. Restu mak: 10');\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', 'There are %(total)s objects. Remaining: %(count)s', 5, '', {\n      'total': 5,\n      'count': 10\n    }), 'Iha 5 objetu sira. Restu mak: 10');\n  });\n  it('Should not require a plural for translation', function () {\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', '', 5, '', {\n      'total': 5,\n      'count': 10\n    }), 'Iha 5 objetu sira. Restu mak: 10');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsInRldCIsIkNhdGFsb2ciLCJkZXNjcmliZSIsIml0IiwiZXF1YWwiLCJ0cmFuc2xhdGUiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQSxJQUFJQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXBCOztBQUVBLElBQU1DLEdBQUcsR0FBRyxJQUFJQyxtQkFBSixDQUFZO0FBQ3RCLGNBQVksWUFEVTtBQUV0QixhQUFXLFNBRlc7QUFHdEIsaUJBQWUsTUFITztBQUl0QixrQkFBZ0IsTUFKTTtBQUt0Qix3QkFBc0IsMkJBTEE7QUFNdEIsMkJBQXlCLENBQUMsbUJBQUQsRUFBc0IscUJBQXRCLENBTkg7QUFPdEIsa0NBQWdDLENBQUMsYUFBRCxFQUFnQixlQUFoQixDQVBWO0FBUXRCLGtDQUFnQyxDQUFDLGFBQUQsRUFBZ0IsZUFBaEIsQ0FSVjtBQVN0QixxREFBbUQsQ0FBQyw0Q0FBRCxFQUErQyxpREFBL0MsQ0FUN0I7QUFVdEIsZ0RBQThDLENBQUMsMENBQUQsRUFBNkMsb0NBQTdDO0FBVnhCLENBQVosQ0FBWjtBQWFBQyxRQUFRLENBQUMsb0JBQUQsRUFBdUIsWUFBVTtBQUN2Q0MsRUFBQUEsRUFBRSxDQUFDLHlDQUFELEVBQTRDLFlBQU07QUFDbERMLElBQUFBLE1BQU0sQ0FBQ00sS0FBUCxDQUFjSixHQUFHLENBQUNLLFNBQUosQ0FBYyxFQUFkLEVBQWtCLFVBQWxCLENBQWQsRUFBNkMsWUFBN0M7QUFDRCxHQUZDLENBQUYsRUFJQUYsRUFBRSxDQUFDLGtEQUFELEVBQXFELFlBQU07QUFDM0RMLElBQUFBLE1BQU0sQ0FBQ00sS0FBUCxDQUFhSixHQUFHLENBQUNLLFNBQUosQ0FBYyxNQUFkLEVBQXNCLEtBQXRCLENBQWIsRUFBMkMsTUFBM0M7QUFDQVAsSUFBQUEsTUFBTSxDQUFDTSxLQUFQLENBQWNKLEdBQUcsQ0FBQ0ssU0FBSixDQUFjLE9BQWQsRUFBdUIsS0FBdkIsQ0FBZCxFQUE2QyxNQUE3QztBQUNELEdBSEMsQ0FKRjtBQVNBRixFQUFBQSxFQUFFLENBQUMsK0RBQUQsRUFBa0UsWUFBTTtBQUV4RUwsSUFBQUEsTUFBTSxDQUFDTSxLQUFQLENBQWFKLEdBQUcsQ0FBQ0ssU0FBSixDQUFjLEVBQWQsRUFBa0IsaURBQWxCLEVBQXFFLG1EQUFyRSxFQUEwSCxDQUExSCxFQUE2SCxFQUE3SCxFQUFpSTtBQUFDLGVBQVMsQ0FBVjtBQUFhLGVBQVM7QUFBdEIsS0FBakksQ0FBYixFQUEwSyw2QkFBMUs7QUFDQVAsSUFBQUEsTUFBTSxDQUFDTSxLQUFQLENBQWFKLEdBQUcsQ0FBQ0ssU0FBSixDQUFjLEVBQWQsRUFBa0IsaURBQWxCLEVBQXFFLG1EQUFyRSxFQUEwSCxDQUExSCxFQUE2SCxFQUE3SCxFQUFpSTtBQUFDLGVBQVMsQ0FBVjtBQUFhLGVBQVM7QUFBdEIsS0FBakksQ0FBYixFQUEwSyxrQ0FBMUs7QUFDRCxHQUpDLENBQUY7QUFLQUYsRUFBQUEsRUFBRSxDQUFDLDZDQUFELEVBQWdELFlBQU07QUFDdERMLElBQUFBLE1BQU0sQ0FBQ00sS0FBUCxDQUFhSixHQUFHLENBQUNLLFNBQUosQ0FBYyxFQUFkLEVBQWtCLGlEQUFsQixFQUFxRSxFQUFyRSxFQUF5RSxDQUF6RSxFQUE0RSxFQUE1RSxFQUFnRjtBQUFDLGVBQVMsQ0FBVjtBQUFhLGVBQVM7QUFBdEIsS0FBaEYsQ0FBYixFQUF5SCxrQ0FBekg7QUFDRCxHQUZDLENBQUY7QUFJRCxDQW5CTyxDQUFSIiwic291cmNlUm9vdCI6Ii9ob21lL2pvc2gvZ2l0aHViL2NhdGFscGFpbnRlcm5hdGlvbmFsL3Jpb3Rqcy1nZXR0ZXh0L3NyYy9qcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ2F0YWxvZyBmcm9tICcuL2NhdGFsb2cuanMnO1xudmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuXG5jb25zdCB0ZXQgPSBuZXcgQ2F0YWxvZyh7XG4gICdBY3Rpdml0eSc6ICdBY3RpdmlkYWRlJyxcbiAgJ1Byb2plY3QnOiAnUHJvamV0dScsXG4gICd2ZXJiXFx4MDRtYXknOiAnYmVsZScsXG4gICdtb250aFxceDA0bWF5JzogJ21haXUnLFxuICAnYW5pbWFsXFx4MDRFbGVwaGFudCc6ICdBbWltYWwgYWJ1LWFidSBuZWViZSBib290JyxcbiAgJ1RoZXJlIGlzIG9uZSBhY3Rpdml0eSc6IFsnSWhhIGF0aXZpZGFkZSBpZGEnLCAnSWhhIGF0aXZpZGFkZSBiYXJhayddLFxuICAnZm9vXFx4MDRUaGVyZSBpcyBvbmUgYWN0aXZpdHknOiBbJ0loYSBmb28gaWRhJywgJ0loYSBmb28gYmFyYWsnXSxcbiAgJ2JhclxceDA0VGhlcmUgaXMgb25lIGFjdGl2aXR5JzogWydJaGEgYmFyIGlkYScsICdJaGEgYmFyIGJhcmFrJ10sXG4gICdUaGVyZSBpcyAlKHRvdGFsKXMgb2JqZWN0LiBSZW1haW5pbmc6ICUoY291bnQpcyc6IFsnSWhhICUodG90YWwpcyBvYmpldHUuIFJlc3R1IG1hazogJShjb3VudClzJywgJ0loYSAlKHRvdGFsKXMgb2JqZXR1IHNpcmEuIFJlc3R1IG1hazogJShjb3VudClzJ10sXG4gICdJIGNhdWdodCAlcyBwb2NrZXQgbW9uc3RlciEuIFJlbWFpbmluZzogJXMnOiBbXCJIYXUga2FlciAlcyBwb2tlbW9uIGRlaXQhLiBTZWkgbGl2cmU6ICVzXCIsIFwiSGF1IGthZXIgJXMgcG9rZW1vbiEgU2VpIGxpdnJlOiAlc1wiXVxufSlcblxuZGVzY3JpYmUoXCJUZXR1biB0cmFuc2xhdGlvbnNcIiwgZnVuY3Rpb24oKXtcbiAgaXQoJ3Nob3VsZCB0cmFuc2xhdGUgQWN0aXZpdHkgdG8gQWN0aXZpZGFkZScsICgpID0+IHtcbiAgICBhc3NlcnQuZXF1YWwoIHRldC50cmFuc2xhdGUoJycsICdBY3Rpdml0eScpLCAnQWN0aXZpZGFkZScpO1xuICB9KSxcblxuICBpdCgnc2hvdWxkIHRyYW5zbGF0ZSBjb250ZXh0dWFsIG1hcmtlcnMgd2hlbiBwcmVzZW50JywgKCkgPT4ge1xuICAgIGFzc2VydC5lcXVhbCh0ZXQudHJhbnNsYXRlKCd2ZXJiJywgJ21heScpLCAnYmVsZScpO1xuICAgIGFzc2VydC5lcXVhbCggdGV0LnRyYW5zbGF0ZSgnbW9udGgnLCAnbWF5JyksICdtYWl1Jyk7XG4gIH0pXG5cbiAgaXQoJ3Nob3VsZCB0cmFuc2xhdGUgaW50ZXJwb2xhdGVkIHBvc2l0aW9uYWwgbWFya2VycyB3aGVuIHByZXNlbnQnLCAoKSA9PiB7XG5cbiAgICBhc3NlcnQuZXF1YWwodGV0LnRyYW5zbGF0ZSgnJywgJ1RoZXJlIGlzICUodG90YWwpcyBvYmplY3QuIFJlbWFpbmluZzogJShjb3VudClzJywgJ1RoZXJlIGFyZSAlKHRvdGFsKXMgb2JqZWN0cy4gUmVtYWluaW5nOiAlKGNvdW50KXMnLCAxLCAnJywgeyd0b3RhbCc6IDEsICdjb3VudCc6IDEwfSksICdJaGEgMSBvYmpldHUuIFJlc3R1IG1hazogMTAnKTtcbiAgICBhc3NlcnQuZXF1YWwodGV0LnRyYW5zbGF0ZSgnJywgJ1RoZXJlIGlzICUodG90YWwpcyBvYmplY3QuIFJlbWFpbmluZzogJShjb3VudClzJywgJ1RoZXJlIGFyZSAlKHRvdGFsKXMgb2JqZWN0cy4gUmVtYWluaW5nOiAlKGNvdW50KXMnLCA1LCAnJywgeyd0b3RhbCc6IDUsICdjb3VudCc6IDEwfSksICdJaGEgNSBvYmpldHUgc2lyYS4gUmVzdHUgbWFrOiAxMCcpO1xuICB9KVxuICBpdCgnU2hvdWxkIG5vdCByZXF1aXJlIGEgcGx1cmFsIGZvciB0cmFuc2xhdGlvbicsICgpID0+IHtcbiAgICBhc3NlcnQuZXF1YWwodGV0LnRyYW5zbGF0ZSgnJywgJ1RoZXJlIGlzICUodG90YWwpcyBvYmplY3QuIFJlbWFpbmluZzogJShjb3VudClzJywgJycsIDUsICcnLCB7J3RvdGFsJzogNSwgJ2NvdW50JzogMTB9KSwgJ0loYSA1IG9iamV0dSBzaXJhLiBSZXN0dSBtYWs6IDEwJyk7XG4gIH0pXG5cbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "test.js"
      ],
      "names": [
        "assert",
        "require",
        "tet",
        "Catalog",
        "describe",
        "it",
        "equal",
        "translate"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAMC,GAAG,GAAG,IAAIC,mBAAJ,CAAY;AACtB,cAAY,YADU;AAEtB,aAAW,SAFW;AAGtB,iBAAe,MAHO;AAItB,kBAAgB,MAJM;AAKtB,wBAAsB,2BALA;AAMtB,2BAAyB,CAAC,mBAAD,EAAsB,qBAAtB,CANH;AAOtB,kCAAgC,CAAC,aAAD,EAAgB,eAAhB,CAPV;AAQtB,kCAAgC,CAAC,aAAD,EAAgB,eAAhB,CARV;AAStB,qDAAmD,CAAC,4CAAD,EAA+C,iDAA/C,CAT7B;AAUtB,gDAA8C,CAAC,0CAAD,EAA6C,oCAA7C;AAVxB,CAAZ,CAAZ;AAaAC,QAAQ,CAAC,oBAAD,EAAuB,YAAU;AACvCC,EAAAA,EAAE,CAAC,yCAAD,EAA4C,YAAM;AAClDL,IAAAA,MAAM,CAACM,KAAP,CAAcJ,GAAG,CAACK,SAAJ,CAAc,EAAd,EAAkB,UAAlB,CAAd,EAA6C,YAA7C;AACD,GAFC,CAAF,EAIAF,EAAE,CAAC,kDAAD,EAAqD,YAAM;AAC3DL,IAAAA,MAAM,CAACM,KAAP,CAAaJ,GAAG,CAACK,SAAJ,CAAc,MAAd,EAAsB,KAAtB,CAAb,EAA2C,MAA3C;AACAP,IAAAA,MAAM,CAACM,KAAP,CAAcJ,GAAG,CAACK,SAAJ,CAAc,OAAd,EAAuB,KAAvB,CAAd,EAA6C,MAA7C;AACD,GAHC,CAJF;AASAF,EAAAA,EAAE,CAAC,+DAAD,EAAkE,YAAM;AAExEL,IAAAA,MAAM,CAACM,KAAP,CAAaJ,GAAG,CAACK,SAAJ,CAAc,EAAd,EAAkB,iDAAlB,EAAqE,mDAArE,EAA0H,CAA1H,EAA6H,EAA7H,EAAiI;AAAC,eAAS,CAAV;AAAa,eAAS;AAAtB,KAAjI,CAAb,EAA0K,6BAA1K;AACAP,IAAAA,MAAM,CAACM,KAAP,CAAaJ,GAAG,CAACK,SAAJ,CAAc,EAAd,EAAkB,iDAAlB,EAAqE,mDAArE,EAA0H,CAA1H,EAA6H,EAA7H,EAAiI;AAAC,eAAS,CAAV;AAAa,eAAS;AAAtB,KAAjI,CAAb,EAA0K,kCAA1K;AACD,GAJC,CAAF;AAKAF,EAAAA,EAAE,CAAC,6CAAD,EAAgD,YAAM;AACtDL,IAAAA,MAAM,CAACM,KAAP,CAAaJ,GAAG,CAACK,SAAJ,CAAc,EAAd,EAAkB,iDAAlB,EAAqE,EAArE,EAAyE,CAAzE,EAA4E,EAA5E,EAAgF;AAAC,eAAS,CAAV;AAAa,eAAS;AAAtB,KAAhF,CAAb,EAAyH,kCAAzH;AACD,GAFC,CAAF;AAID,CAnBO,CAAR",
      "sourceRoot": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/",
      "sourcesContent": [
        "import Catalog from './catalog.js';\nvar assert = require('assert');\n\nconst tet = new Catalog({\n  'Activity': 'Actividade',\n  'Project': 'Projetu',\n  'verb\\x04may': 'bele',\n  'month\\x04may': 'maiu',\n  'animal\\x04Elephant': 'Amimal abu-abu neebe boot',\n  'There is one activity': ['Iha atividade ida', 'Iha atividade barak'],\n  'foo\\x04There is one activity': ['Iha foo ida', 'Iha foo barak'],\n  'bar\\x04There is one activity': ['Iha bar ida', 'Iha bar barak'],\n  'There is %(total)s object. Remaining: %(count)s': ['Iha %(total)s objetu. Restu mak: %(count)s', 'Iha %(total)s objetu sira. Restu mak: %(count)s'],\n  'I caught %s pocket monster!. Remaining: %s': [\"Hau kaer %s pokemon deit!. Sei livre: %s\", \"Hau kaer %s pokemon! Sei livre: %s\"]\n})\n\ndescribe(\"Tetun translations\", function(){\n  it('should translate Activity to Actividade', () => {\n    assert.equal( tet.translate('', 'Activity'), 'Actividade');\n  }),\n\n  it('should translate contextual markers when present', () => {\n    assert.equal(tet.translate('verb', 'may'), 'bele');\n    assert.equal( tet.translate('month', 'may'), 'maiu');\n  })\n\n  it('should translate interpolated positional markers when present', () => {\n\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', 'There are %(total)s objects. Remaining: %(count)s', 1, '', {'total': 1, 'count': 10}), 'Iha 1 objetu. Restu mak: 10');\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', 'There are %(total)s objects. Remaining: %(count)s', 5, '', {'total': 5, 'count': 10}), 'Iha 5 objetu sira. Restu mak: 10');\n  })\n  it('Should not require a plural for translation', () => {\n    assert.equal(tet.translate('', 'There is %(total)s object. Remaining: %(count)s', '', 5, '', {'total': 5, 'count': 10}), 'Iha 5 objetu sira. Restu mak: 10');\n  })\n\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1617713885921
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/josh/github/catalpainternational/riotjs-gettext/src/js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/josh/github/catalpainternational/riotjs-gettext\",\"filename\":\"/home/josh/github/catalpainternational/riotjs-gettext/src/js/catalog.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/josh/github/catalpainternational/riotjs-gettext\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.14": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/josh/github/catalpainternational/riotjs-gettext",
      "filename": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/catalog.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/josh/github/catalpainternational/riotjs-gettext",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/catalog.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/catalog.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/",
        "sourceFileName": "catalog.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar csep = '\\x04'; // The separator between \"context\" marker and \"text\" value, as per Django\n\nvar contextualize = function contextualize(context, text) {\n  return \"\".concat(context).concat(csep).concat(text);\n}; //Return a 'contextualized' string, appending context and marker to key\n\n/*\nType checking helps to determine whether we found a value\nin the dictionary and whether there are plural forms of this string\n*/\n\n\nvar is_undef = function is_undef(value) {\n  return typeof value == 'undefined';\n};\n\nvar is_str = function is_str(value) {\n  return typeof value == 'string';\n};\n\nvar is_arr = function is_arr(value) {\n  return Array.isArray(value);\n};\n/*\nDetermining if a given count should use a plural form of a word or not\nPlural / Singular forms are passed as an array\n*/\n\n\nvar pluralidx = function pluralidx(count) {\n  return count == 1 ? 0 : 1;\n};\n\nvar gettext = function gettext(catalog, msgid) {\n  /*\n  For the simplest case of a single word or phrase translation\n  this looks up the w/p from the catalog\n  */\n  var value = catalog[msgid];\n\n  if (is_undef(value)) {\n    return gettext_noop(msgid);\n  } else if (is_str(value)) {\n    return value;\n  } else if (is_arr(value)) {\n    return value[0];\n  }\n};\n\nvar ngettext = function ngettext(catalog, msgid, plural, count) {\n  /*\n  plural is a fallback value if not found in the dictionary\n  */\n  var value = catalog[msgid];\n\n  if (is_undef(value)) {\n    return count == 1 || !plural ? gettext_noop(msgid) : plural;\n  } else if (is_str(value)) {\n    return value;\n  } else if (is_arr(value)) {\n    return value[pluralidx(count)];\n  }\n};\n\nvar gettext_noop = function gettext_noop(msgid) {\n  return msgid;\n};\n\nvar pgettext = function pgettext(catalog, context, msgid) {\n  var value = gettext(catalog, contextualize(context, msgid));\n\n  if (value.indexOf(csep) != -1) {\n    value = msgid;\n  }\n\n  return value;\n};\n\nvar npgettext = function npgettext(catalog, context, msgid, plural, count) {\n  var value = ngettext(catalog, contextualize(context, msgid), contextualize(context, plural), count);\n\n  if (value.indexOf(csep) != -1) {\n    value = ngettext(catalog, msgid, plural, count);\n  }\n\n  return value;\n};\n\nvar do_named_interpolate = function do_named_interpolate(fmt, obj) {\n  return fmt.replace(/%\\(\\w+\\)s/g, function (match) {\n    return String(obj[match.slice(2, -2)]);\n  });\n};\n\nvar do_interpolate = function do_interpolate(fmt, obj) {\n  return fmt.replace(/%s/g, function (match) {\n    return String(obj.shift());\n  });\n};\n\nvar Catalog = /*#__PURE__*/function () {\n  function Catalog(content, translate_url) {\n    _classCallCheck(this, Catalog);\n\n    this.content = content;\n    this.translate_url = translate_url;\n    this.waitingTranslations = [];\n    this.timer = undefined;\n    this.timeout = 300;\n  }\n\n  _createClass(Catalog, [{\n    key: \"fetchTranslations\",\n    value: function fetchTranslations() {\n      var response = fetch(this.translate_url, {\n        method: \"POST\",\n        body: JSON.stringify(this.waitingTranslations),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      this.waitingTranslations = [];\n      return response;\n    }\n  }, {\n    key: \"collect\",\n    value: function collect(context, msgid, plural) {\n      clearTimeout(this.timer);\n      this.waitingTranslations.push([context, msgid, plural]);\n      this.timer = setTimeout(this.fetchTranslations, this.timeout);\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(context, msgid, plural, count, interpolate, interpolate_named) {\n      /*\n      Return the output of an appropriately chosen translation function.\n      Depending on the parameters passed this will range from a simple lookup\n      to something which outputs a plural string from a contextual dictionary\n      */\n      var catalog = this.content || {};\n      var message;\n      /* Broadly speaking, go from 'most complex' to 'least complex' case */\n\n      if (context && msgid && !is_undef(plural) && count) {\n        message = npgettext(catalog, context, msgid, plural, parseInt(count));\n      } else if (msgid && plural && count) {\n        message = ngettext(catalog, msgid, plural, parseInt(count));\n      } else if (msgid && context) {\n        message = pgettext(catalog, context, msgid);\n      } else if (msgid) {\n        message = gettext(catalog, msgid);\n      }\n      /* Further processing by string interpolation */\n\n\n      if (interpolate_named) {\n        message = do_named_interpolate(message, interpolate_named);\n      } else if (interpolate) {\n        message = do_interpolate(message, interpolate);\n      }\n\n      return message;\n    }\n  }, {\n    key: \"translate_opts\",\n    value: function translate_opts(opts) {\n      /*Parameterized version of translate */\n      return translate(opts.context, opts.msgid, opts.plural, opts.count, opts.interpolate, opts.interpolate_named);\n    }\n  }, {\n    key: \"has\",\n    value: function has(context, msgid) {\n      return !is_undef(this.content[context ? contextualize(context, msgid) : msgid]);\n    }\n  }]);\n\n  return Catalog;\n}();\n\nexports[\"default\"] = Catalog;\n;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "catalog.js"
      ],
      "names": [
        "csep",
        "contextualize",
        "context",
        "text",
        "is_undef",
        "value",
        "is_str",
        "is_arr",
        "Array",
        "isArray",
        "pluralidx",
        "count",
        "gettext",
        "catalog",
        "msgid",
        "gettext_noop",
        "ngettext",
        "plural",
        "pgettext",
        "indexOf",
        "npgettext",
        "do_named_interpolate",
        "fmt",
        "obj",
        "replace",
        "match",
        "String",
        "slice",
        "do_interpolate",
        "shift",
        "Catalog",
        "content",
        "translate_url",
        "waitingTranslations",
        "timer",
        "undefined",
        "timeout",
        "response",
        "fetch",
        "method",
        "body",
        "JSON",
        "stringify",
        "headers",
        "clearTimeout",
        "push",
        "setTimeout",
        "fetchTranslations",
        "interpolate",
        "interpolate_named",
        "message",
        "parseInt",
        "opts",
        "translate"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA,IAAMA,IAAI,GAAG,MAAb,C,CAAqB;;AACrB,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAUC,IAAV;AAAA,mBAAsBD,OAAtB,SAAgCF,IAAhC,SAAuCG,IAAvC;AAAA,CAAtB,C,CAAoE;;AACpE;AACA;AACA;AACA;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAW,OAAOA,KAAP,IAAiB,WAA5B;AAAA,CAAjB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACD,KAAD;AAAA,SAAW,OAAOA,KAAP,IAAiB,QAA5B;AAAA,CAAf;;AACA,IAAME,MAAM,GAAG,SAATA,MAAS,CAACF,KAAD;AAAA,SAAWG,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAX;AAAA,CAAf;AAEA;AACA;AACA;AACA;;;AACA,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,SAAWA,KAAK,IAAI,CAAT,GAAa,CAAb,GAAiB,CAA5B;AAAA,CAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD,EAAUC,KAAV,EAAoB;AAChC;AACJ;AACA;AACA;AACI,MAAIT,KAAK,GAAGQ,OAAO,CAACC,KAAD,CAAnB;;AACA,MAAIV,QAAQ,CAACC,KAAD,CAAZ,EAAoB;AAChB,WAAOU,YAAY,CAACD,KAAD,CAAnB;AACH,GAFD,MAEO,IAAIR,MAAM,CAACD,KAAD,CAAV,EAAkB;AACrB,WAAOA,KAAP;AACH,GAFM,MAEA,IAAIE,MAAM,CAACF,KAAD,CAAV,EAAkB;AACrB,WAAOA,KAAK,CAAC,CAAD,CAAZ;AACH;AACJ,CAbD;;AAeA,IAAMW,QAAQ,GAAG,SAAXA,QAAW,CAACH,OAAD,EAAUC,KAAV,EAAiBG,MAAjB,EAAyBN,KAAzB,EAAmC;AAChD;AACJ;AACA;AACI,MAAIN,KAAK,GAAGQ,OAAO,CAACC,KAAD,CAAnB;;AACA,MAAIV,QAAQ,CAACC,KAAD,CAAZ,EAAoB;AAChB,WAAQM,KAAK,IAAI,CAAT,IAAc,CAACM,MAAhB,GAA0BF,YAAY,CAACD,KAAD,CAAtC,GAAgDG,MAAvD;AACH,GAFD,MAEO,IAAIX,MAAM,CAACD,KAAD,CAAV,EAAkB;AACrB,WAAOA,KAAP;AACH,GAFM,MAEA,IAAIE,MAAM,CAACF,KAAD,CAAV,EAAkB;AACrB,WAAOA,KAAK,CAACK,SAAS,CAACC,KAAD,CAAV,CAAZ;AACH;AACJ,CAZD;;AAcA,IAAMI,YAAY,GAAG,SAAfA,YAAe,CAACD,KAAD;AAAA,SAAWA,KAAX;AAAA,CAArB;;AAEA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACL,OAAD,EAAUX,OAAV,EAAmBY,KAAnB,EAA6B;AAC1C,MAAIT,KAAK,GAAGO,OAAO,CAACC,OAAD,EAAUZ,aAAa,CAACC,OAAD,EAAUY,KAAV,CAAvB,CAAnB;;AAEA,MAAIT,KAAK,CAACc,OAAN,CAAcnB,IAAd,KAAuB,CAAC,CAA5B,EAA+B;AAC3BK,IAAAA,KAAK,GAAGS,KAAR;AACH;;AACD,SAAOT,KAAP;AACH,CAPD;;AASA,IAAMe,SAAS,GAAG,SAAZA,SAAY,CAACP,OAAD,EAAUX,OAAV,EAAmBY,KAAnB,EAA0BG,MAA1B,EAAkCN,KAAlC,EAA4C;AAC1D,MAAIN,KAAK,GAAGW,QAAQ,CAChBH,OADgB,EAEhBZ,aAAa,CAACC,OAAD,EAAUY,KAAV,CAFG,EAGhBb,aAAa,CAACC,OAAD,EAAUe,MAAV,CAHG,EAIhBN,KAJgB,CAApB;;AAMA,MAAIN,KAAK,CAACc,OAAN,CAAcnB,IAAd,KAAuB,CAAC,CAA5B,EAA+B;AAC3BK,IAAAA,KAAK,GAAGW,QAAQ,CAACH,OAAD,EAAUC,KAAV,EAAiBG,MAAjB,EAAyBN,KAAzB,CAAhB;AACH;;AACD,SAAON,KAAP;AACH,CAXD;;AAaA,IAAMgB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAcD,GAAG,CAACE,OAAJ,CAAY,YAAZ,EAA0B,UAASC,KAAT,EAAgB;AAAC,WAAOC,MAAM,CAACH,GAAG,CAACE,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAc,CAAC,CAAf,CAAD,CAAJ,CAAb;AAAsC,GAAjF,CAAd;AAAA,CAA7B;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACN,GAAD,EAAMC,GAAN;AAAA,SAAcD,GAAG,CAACE,OAAJ,CAAY,KAAZ,EAAmB,UAASC,KAAT,EAAe;AAAC,WAAOC,MAAM,CAACH,GAAG,CAACM,KAAJ,EAAD,CAAb;AAA2B,GAA9D,CAAd;AAAA,CAAvB;;IAEqBC,O;AACjB,mBAAYC,OAAZ,EAAqBC,aAArB,EAAoC;AAAA;;AAChC,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,mBAAL,GAA2B,EAA3B;AACA,SAAKC,KAAL,GAAaC,SAAb;AACA,SAAKC,OAAL,GAAe,GAAf;AACH;;;;WAED,6BAAoB;AAChB,UAAMC,QAAQ,GAAGC,KAAK,CAAC,KAAKN,aAAN,EAAqB;AACvCO,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKT,mBAApB,CAFiC;AAGvCU,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAH8B,OAArB,CAAtB;AAOA,WAAKV,mBAAL,GAA2B,EAA3B;AACA,aAAOI,QAAP;AACH;;;WAED,iBAAQnC,OAAR,EAAiBY,KAAjB,EAAwBG,MAAxB,EAAgC;AAC5B2B,MAAAA,YAAY,CAAC,KAAKV,KAAN,CAAZ;AACA,WAAKD,mBAAL,CAAyBY,IAAzB,CAA8B,CAAC3C,OAAD,EAAUY,KAAV,EAAiBG,MAAjB,CAA9B;AACA,WAAKiB,KAAL,GAAaY,UAAU,CAAC,KAAKC,iBAAN,EAAyB,KAAKX,OAA9B,CAAvB;AACH;;;WAED,mBAAWlC,OAAX,EAAoBY,KAApB,EAA2BG,MAA3B,EAAmCN,KAAnC,EAA0CqC,WAA1C,EAAuDC,iBAAvD,EAA0E;AACtE;AACR;AACA;AACA;AACA;AACQ,UAAMpC,OAAO,GAAG,KAAKkB,OAAL,IAAgB,EAAhC;AACA,UAAImB,OAAJ;AAEA;;AACA,UAAIhD,OAAO,IAAIY,KAAX,IAAoB,CAACV,QAAQ,CAACa,MAAD,CAA7B,IAAyCN,KAA7C,EAAoD;AAAEuC,QAAAA,OAAO,GAAG9B,SAAS,CAACP,OAAD,EAAUX,OAAV,EAAmBY,KAAnB,EAA0BG,MAA1B,EAAkCkC,QAAQ,CAACxC,KAAD,CAA1C,CAAnB;AAAuE,OAA7H,MACK,IAAIG,KAAK,IAAIG,MAAT,IAAmBN,KAAvB,EAA8B;AAAEuC,QAAAA,OAAO,GAAGlC,QAAQ,CAACH,OAAD,EAAUC,KAAV,EAAiBG,MAAjB,EAAyBkC,QAAQ,CAACxC,KAAD,CAAjC,CAAlB;AAA6D,OAA7F,MACA,IAAIG,KAAK,IAAIZ,OAAb,EAAsB;AAAEgD,QAAAA,OAAO,GAAGhC,QAAQ,CAACL,OAAD,EAAUX,OAAV,EAAmBY,KAAnB,CAAlB;AAA6C,OAArE,MACA,IAAIA,KAAJ,EAAW;AAAEoC,QAAAA,OAAO,GAAGtC,OAAO,CAACC,OAAD,EAAUC,KAAV,CAAjB;AAAmC;AAErD;;;AACA,UAAImC,iBAAJ,EAAuB;AAAEC,QAAAA,OAAO,GAAG7B,oBAAoB,CAAC6B,OAAD,EAAUD,iBAAV,CAA9B;AAA4D,OAArF,MACK,IAAID,WAAJ,EAAiB;AAAEE,QAAAA,OAAO,GAAGtB,cAAc,CAACsB,OAAD,EAAUF,WAAV,CAAxB;AAAgD;;AACxE,aAAOE,OAAP;AACH;;;WAED,wBAAeE,IAAf,EAAqB;AACjB;AACA,aAAOC,SAAS,CAAED,IAAI,CAAClD,OAAP,EAAgBkD,IAAI,CAACtC,KAArB,EAA4BsC,IAAI,CAACnC,MAAjC,EAAyCmC,IAAI,CAACzC,KAA9C,EAAqDyC,IAAI,CAACJ,WAA1D,EAAuEI,IAAI,CAACH,iBAA5E,CAAhB;AACH;;;WAED,aAAI/C,OAAJ,EAAaY,KAAb,EAAoB;AAChB,aAAO,CAACV,QAAQ,CAAC,KAAK2B,OAAL,CAAa7B,OAAO,GAAGD,aAAa,CAACC,OAAD,EAAUY,KAAV,CAAhB,GAAmCA,KAAvD,CAAD,CAAhB;AACH;;;;;;;AACJ",
      "sourceRoot": "/home/josh/github/catalpainternational/riotjs-gettext/src/js/",
      "sourcesContent": [
        "const csep = '\\x04'; // The separator between \"context\" marker and \"text\" value, as per Django\nconst contextualize = (context, text) => `${context}${csep}${text}` //Return a 'contextualized' string, appending context and marker to key\n/*\nType checking helps to determine whether we found a value\nin the dictionary and whether there are plural forms of this string\n*/\nconst is_undef = (value) => typeof(value) == 'undefined';\nconst is_str = (value) => typeof(value) == 'string';\nconst is_arr = (value) => Array.isArray(value)\n\n/*\nDetermining if a given count should use a plural form of a word or not\nPlural / Singular forms are passed as an array\n*/\nconst pluralidx = (count) => count == 1 ? 0 : 1\n\nconst gettext = (catalog, msgid) => {\n    /*\n    For the simplest case of a single word or phrase translation\n    this looks up the w/p from the catalog\n    */\n    let value = catalog[msgid];\n    if (is_undef(value)){\n        return gettext_noop(msgid);\n    } else if (is_str(value)){\n        return value;\n    } else if (is_arr(value)){\n        return value[0]\n    }\n};\n\nconst ngettext = (catalog, msgid, plural, count) => {\n    /*\n    plural is a fallback value if not found in the dictionary\n    */\n    let value = catalog[msgid];\n    if (is_undef(value)){\n        return (count == 1 || !plural) ? gettext_noop(msgid) : plural;\n    } else if (is_str(value)){\n        return value;\n    } else if (is_arr(value)){\n        return value[pluralidx(count)];\n    }\n};\n\nconst gettext_noop = (msgid) => msgid;\n\nconst pgettext = (catalog, context, msgid) => {\n    let value = gettext(catalog, contextualize(context, msgid));\n\n    if (value.indexOf(csep) != -1) {\n        value = msgid;\n    }\n    return value;\n};\n\nconst npgettext = (catalog, context, msgid, plural, count) => {\n    let value = ngettext(\n        catalog,\n        contextualize(context, msgid),\n        contextualize(context, plural),\n        count\n    );\n    if (value.indexOf(csep) != -1) {\n        value = ngettext(catalog, msgid, plural, count);\n    }\n    return value;\n};\n\nconst do_named_interpolate = (fmt, obj) => fmt.replace(/%\\(\\w+\\)s/g, function(match) {return String(obj[match.slice(2,-2)])});\nconst do_interpolate = (fmt, obj) => fmt.replace(/%s/g, function(match){return String(obj.shift())});\n\nexport default class Catalog {\n    constructor(content, translate_url) {\n        this.content = content;\n        this.translate_url = translate_url;\n        this.waitingTranslations = [];\n        this.timer = undefined;\n        this.timeout = 300;\n    };\n\n    fetchTranslations() {\n        const response = fetch(this.translate_url, {\n            method: \"POST\",\n            body: JSON.stringify(this.waitingTranslations),\n            headers: {\n                \"Content-Type\": \"application/json\",\n            }\n        });\n        this.waitingTranslations = [];\n        return response;\n    }\n\n    collect(context, msgid, plural) {\n        clearTimeout(this.timer);\n        this.waitingTranslations.push([context, msgid, plural]);\n        this.timer = setTimeout(this.fetchTranslations, this.timeout);\n    }\n\n    translate (context, msgid, plural, count, interpolate, interpolate_named) {\n        /*\n        Return the output of an appropriately chosen translation function.\n        Depending on the parameters passed this will range from a simple lookup\n        to something which outputs a plural string from a contextual dictionary\n        */\n        const catalog = this.content || {};\n        let message;\n\n        /* Broadly speaking, go from 'most complex' to 'least complex' case */\n        if (context && msgid && !is_undef(plural) && count) { message = npgettext(catalog, context, msgid, plural, parseInt(count)) }\n        else if (msgid && plural && count) { message = ngettext(catalog, msgid, plural, parseInt(count)) }\n        else if (msgid && context) { message = pgettext(catalog, context, msgid) }\n        else if (msgid) { message = gettext(catalog, msgid) }\n\n        /* Further processing by string interpolation */\n        if (interpolate_named) { message = do_named_interpolate(message, interpolate_named) }\n        else if (interpolate) { message = do_interpolate(message, interpolate) }\n        return message;\n    };\n\n    translate_opts(opts) {\n        /*Parameterized version of translate */\n        return translate (opts.context, opts.msgid, opts.plural, opts.count, opts.interpolate, opts.interpolate_named)\n    }\n\n    has(context, msgid) {\n        return !is_undef(this.content[context ? contextualize(context, msgid) : msgid]);\n    }\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1617713885921
  }
}